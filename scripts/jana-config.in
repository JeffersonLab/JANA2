#!/bin/sh

# Print some compiler options to aid in building programs that use
# JANA as a 3rd party package.

# Here we have a couple of options for dealing with various user
# environments. Namely, if the user has set JANA_HOME, but it is
# different from the installation directory pasted into this file
# during installation, then we have to decide what to go with.
#
# Here we check if the JANA static library file exists using the
# the hardwired installation directory value. If not, then we
# look for the JANA_HOME environment variable. If that is not set
# then just use /usr/local.

# Hardwired values. Most of this is copied from BMS/Makefile.config.in
# and helps document the settings when JANA was built so there is
# the possibility of reusing them if needed when building against
# this JANA installation.

# usage prints the help message
usage() {
    cat <<EOF

Usage:
     jana-config [--help,-h] [--version,-v] [--jana-only] [--cflags] [--libs] [--cxxstandard] [--osname]

Print compiler options useful to help build programs using this "
JANA installation.

  --help, -h    Display this help message.

  --version,-v  Display JANA2 version.

  --jana-only   Don't include arguments from packages JANA was built
                to include support for. Use this if you wish to specify
                these yourself. If you do include this option, it must
                come first in the arugment list as it will only affect
                options that follow it.

  --cxxflags    print flags needed to compile (not necessarily link)
                a program against this installation of JANA.

  --cflags      (same as --cxxflags)

  --libs        print flags needed to link a program against this
                installation of JANA.

  --cxxstandard print the c++ standard used to build JANA2

  --installdir  print install directory for JANA2 build

EOF
}

# If no argument is passed, or help is requested, show usage
if [ "$#" -eq 0 ]; then
    usage
    exit 0
fi


CMAKE_INSTALL_PREFIX="@CMAKE_INSTALL_PREFIX@"
CMAKE_CXX_STANDARD="@CMAKE_CXX_STANDARD@"

JANA_VERSION="@PROJECT_VERSION@"

HAVE_MYSQL="@HAVE_MYSQL@"
JANA2_HAVE_XERCES="@JANA2_HAVE_XERCES@"
JANA2_HAVE_ROOT="@JANA2_HAVE_ROOT@"
HAVE_CMSG="@HAVE_CMSG@"
HAVE_CURL="@HAVE_CURL@"
HAVE_CCDB="@HAVE_CCDB@"

MYSQL_CFLAGS="@MYSQL_CFLAGS@"
MYSQL_LDFLAGS="@MYSQL_LDFLAGS@"
MYSQL_VERSION="@MYSQL_VERSION@"

XERCES_CPPFLAGS="@XERCES_CPPFLAGS@"
XERCES_LDFLAGS="@XERCES_LDFLAGS@"
XERCES_LIBS="@XERCES_LIBS@"

ROOTCFLAGS="@ROOTCFLAGS@"
ROOTGLIBS="@ROOTGLIBS@"

CMSG_CPPFLAGS="@CMSG_CPPFLAGS@"
CMSG_LDFLAGS="@CMSG_LDFLAGS@"
CMSG_LIBS="@CMSG_LIBS@"

CURL_CFLAGS="@CURL_CFLAGS@"
CURL_LDFLAGS="@CURL_LDFLAGS@"

CCDB_CPPFLAGS="@CCDB_CPPFLAGS@"
CCDB_LDFLAGS="@CCDB_LDFLAGS@"
CCDB_LIBS="@CCDB_LIBS@"

JANA_INSTALL_DIR="@JANA_INSTALL_DIR@"
JANA_ONLY_LIBS="@JANA_ONLY_LIBS@"

# Add flags and libraries from all 3rd party packages
CPPFLAGS="${MYSQL_CFLAGS} ${XERCES_CPPFLAGS} ${ROOTCFLAGS} ${CMSG_CPPFLAGS} ${CURL_CFLAGS} ${CCDB_CPPFLAGS}"
LDFLAGS="${MYSQL_LDFLAGS} ${XERCES_LDFLAGS} ${CMSG_LDFLAGS} ${CURL_LDFLAGS} ${CCDB_LDFLAGS}"
LIBS="${XERCES_LIBS} ${ROOTGLIBS} ${CMSG_LIBS} ${CCDB_LIBS}"

# If hardwired value doesn't point to libJANA.a, try JANA_HOME
if [ ! -e "${JANA_INSTALL_DIR}/lib/libJANA.a" ]; then
	if [ -n "${JANA_HOME:+x}" ]; then
		JANA_INSTALL_DIR=${JANA_HOME}
	else
		JANA_INSTALL_DIR=/usr/local
	fi
fi

# Loop over command line arguments
while test $# -gt 0; do

	case $1 in
		--cflags|--cxxflags)
			mess="$mess -I${JANA_INSTALL_DIR}/include ${CPPFLAGS}"
			;;
		--version|-v)
			mess="${JANA_VERSION}"
			;;
		--libs)
			mess="$mess -Wl,-rpath,${JANA_INSTALL_DIR}/lib -L${JANA_INSTALL_DIR}/lib -lJANA ${LDFLAGS} ${JANA_ONLY_LIBS} ${LIBS}"
			;;
		--static-libs)
			mess="$mess ${JANA_INSTALL_DIR}/lib/libJANA.a ${LDFLAGS} ${JANA_ONLY_LIBS} ${LIBS}"
			;;
		--jana-only)
			CPPFLAGS=""
			LDFLAGS=""
			LIBS=""
			;;
		--help|-h)
			usage
			exit 0
			;;
		--cxxstandard)
			mess="$mess ${CMAKE_CXX_STANDARD}"
			;;
		--installdir)
			mess="$mess ${CMAKE_INSTALL_PREFIX}"
			;;
		*)
        	mess="Unknown option: $1" >&2
        ;;
	esac
	shift
done

echo $mess
